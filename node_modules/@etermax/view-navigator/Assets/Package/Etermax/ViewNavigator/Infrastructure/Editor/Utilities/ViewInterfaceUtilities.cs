using Etermax.EditorExtensions.ScriptUtilities.Builder;
using Etermax.EditorExtensions.Utilities;

namespace Etermax.ViewNavigator.Infrastructure.Editor.Utilities
{
    public static class ViewInterfaceUtilities
    {
        private const string ViewInterfaceBody = @"{
	}";

        public static void CreateViewFoldersStructure(string className)
        {
            var viewName = className + "View";
            EditorUtilities.CreateFolderPathFromAssets(CreationDirectories.ViewInterfaceFolderPath(viewName));
        }

        public static bool CreteViewInterfaceFor(string className)
        {
            var viewClassName = className + "View";
            var interfaceName = "I" + viewClassName;
            var folderPath = CreationDirectories.ViewInterfaceFolderPath(viewClassName);
            return ScriptBuilder.New()
                .FolderPath(folderPath)
                .Name(interfaceName)
                .Body(ViewInterfaceBody)
                .Namespace("Presentations." + className + ".Views")
                .AsInterface()
                .Create();
        }
    }
}