using Etermax.Platform;
using Package.Etermax.EterChallenge.Users.Actions;
using Package.Etermax.EterChallenge.Users.Domain;
using Package.Etermax.EterChallenge.Users.Infrastructure;

namespace Package.Etermax.EterChallenge.Users
{
    public class UsersService
    {
        private readonly PlatformServices _platformServices;

        private readonly SessionManager _sessionManager;

        //Actions
        private CreateUser _createUser;
        private LoginWithEmail _loginWithEmail;
        private GetUserIdFromIdentity _getUserIdFromIdentity;
        private Logout _logout;
        private ResetPassword _resetPassword;
        private ChangeEmailPassword _changeEmailPassword;

        //Services
        private ICreateUserService _createUserService;
        private ILoginService _loginService;
        private ILinkIdentityService _linkIdentityService;
        private IUnlinkIdentityService _unlinkIdentityService;
        private IGetUserIdFromIdentityService _getUserIdFromIdentityService;
        private IResetPasswordService _resetPasswordService;
        private IChangeEmailPasswordService _changeEmailPasswordService;

        public UsersService(PlatformServices platformServices, SessionManager sessionManager)
        {
            _platformServices = platformServices;
            _sessionManager = sessionManager;
        }

        public CreateUser CreateUser()
        {
            return _createUser ?? (_createUser = new CreateUser(CreateUserService(), _sessionManager));
        }

        public LoginWithEmail LoginWithEmail()
        {
            return _loginWithEmail ?? (_loginWithEmail = new LoginWithEmail(LoginService(), _sessionManager));
        }

        public GetUserIdFromIdentity GetUserIdFromIdentity()
        {
            return _getUserIdFromIdentity ??
                   (_getUserIdFromIdentity = new GetUserIdFromIdentity(GetUserIdFromIdentityService()));
        }

        public Logout Logout()
        {
            return _logout ?? (_logout = new Logout(CreateUserService(), _sessionManager));
        }

        public ResetPassword ResetPassword()
        {
            return _resetPassword ?? (_resetPassword = new ResetPassword(ResetPasswordService()));
        }

        public ChangeEmailPassword ChangePassword()
        {
            return _changeEmailPassword = (_changeEmailPassword = new ChangeEmailPassword(ChangePasswordService()));
        }

        private IResetPasswordService ResetPasswordService()
        {
            return _resetPasswordService ?? (_resetPasswordService = new PlatformResetPasswordService(
                       _platformServices.ApiUrl,
                       _platformServices.GameId,
                       _platformServices.WebClient));
        }

        private IChangeEmailPasswordService ChangePasswordService()
        {
            return _changeEmailPasswordService ?? (_changeEmailPasswordService =
                       new PlatformChangeEmailPasswordService(
                           _platformServices.ApiUrl,
                           _platformServices.GameId,
                           _platformServices.WebClient));
        }

        private ICreateUserService CreateUserService()
        {
            return _createUserService ?? (_createUserService = new PlatformCreateUserService(
                       _platformServices.ApiUrl,
                       _platformServices.GameId,
                       _platformServices.WebClient));
        }

        private ILoginService LoginService()
        {
            return _loginService ?? (_loginService = new PlatformLoginService(
                       _platformServices.ApiUrl,
                       _platformServices.GameId,
                       _platformServices.WebClient));
        }

        private IGetUserIdFromIdentityService GetUserIdFromIdentityService()
        {
            return _getUserIdFromIdentityService ?? (_getUserIdFromIdentityService =
                       new PlatformGetUserIdFromIdentityService(
                           _platformServices.ApiUrl,
                           _platformServices.GameId,
                           _platformServices.WebClient));
        }
    }
}