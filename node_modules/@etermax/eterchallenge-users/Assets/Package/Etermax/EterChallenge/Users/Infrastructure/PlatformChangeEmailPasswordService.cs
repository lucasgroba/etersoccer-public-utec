using System;
using Etermax.Json;
using Etermax.Web.Client;
using Package.Etermax.EterChallenge.Users.Domain;
using UniRx;

namespace Package.Etermax.EterChallenge.Users.Infrastructure
{
    public class PlatformChangeEmailPasswordService : IChangeEmailPasswordService
    {
        private const string ChangePasswordResource = "/games/:gameId/change-password";
        private readonly string _apiUrl;
        private readonly string _gameId;
        private readonly IWebClient _webClient;

        public PlatformChangeEmailPasswordService(string apiUrl, string gameId, IWebClient webClient)
        {
            _apiUrl = apiUrl;
            _gameId = gameId;
            _webClient = webClient;
        }

        public IObservable<Unit> ChangePassword(string email, string newPassword)
        {
            return CreatePayloadFor(email, newPassword)
                .SelectMany(payload => SendRequest(payload));
        }

        private IObservable<Unit> SendRequest(string payload)
        {
            return _webClient
                .Post(_apiUrl + ChangePasswordResource)
                .ReplacePathParam("gameId", _gameId)
                .PutHeaders("Content-Type", "application/json")
                .Send(payload)
                .AsUnitObservable();
        }

        private IObservable<string> CreatePayloadFor(string email, string newPassword)
        {
            return Observable.Start(() => JsonObject.Create()
                .Add("email", email)
                .Add("password", newPassword).ToString());
        }
    }
}