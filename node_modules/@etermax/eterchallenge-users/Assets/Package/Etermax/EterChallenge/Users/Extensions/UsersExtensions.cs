using System.Collections.Generic;
using System.Linq;
using Etermax.Json;
using Package.Etermax.EterChallenge.Users.Domain;

namespace Package.Etermax.EterChallenge.Users.Extensions
{
    public static class UsersExtensions
    {
        public static User ToLoggedUser(this JsonObject source)
        {
            var isNew = source.GetBool("isNew");
            var accessToken = source.GetString("accessToken");
            var refreshToken = source.GetString("refreshToken");
            return ToAuthenticatedUser(source.GetJsonObject("user"), accessToken, refreshToken, isNew);
        }

        public static User ToUnlinkedUser(this JsonObject source)
        {
            var accessToken = source.GetString("accessToken");
            var refreshToken = source.GetString("refreshToken");
            return ToAuthenticatedUser(source.GetJsonObject("user"), accessToken, refreshToken, false);
        }

        public static User ToLinkedUser(this JsonObject source)
        {
            var accessToken = source.GetString("accessToken");
            var refreshToken = source.GetString("refreshToken");
            return ToAuthenticatedUser(source.GetJsonObject("user"), accessToken, refreshToken, false);
        }

        private static User ToAuthenticatedUser(JsonObject userJsonObject, string accessToken, string refreshToken,
            bool isNew)
        {
            var userId = userJsonObject.GetString("id");
            var identities = ToIdentities(userJsonObject.GetJsonArray<JsonObject>("identities"));
            var profile = ToProfile(userJsonObject.GetJsonObject("profile"));

            return new User(userId, new Credentials(accessToken, refreshToken), profile, isNew, identities);
        }

        private static List<Identity> ToIdentities(JsonArray<JsonObject> source)
        {
            return source
                .Select(jO => new Identity(jO.GetString("providerUserId"), jO.GetString("provider")))
                .ToList();
        }

        private static Profile ToProfile(JsonObject source)
        {
            return new Profile(source.GetString("name"),
                source.GetString("birthDate"),
                source.GetString("pictureUrl"),
                source.GetString("gender"),
                source.GetString("country"));
        }
    }
}