using System;
using Package.Etermax.EterChallenge.Users.Domain;
using UniRx;

namespace Package.Etermax.EterChallenge.Users.Actions
{
    public class RefreshAccessToken
    {
        private readonly IRefreshTokenService _refreshTokenService;
        private readonly SessionManager _sessionManager;

        public RefreshAccessToken(IRefreshTokenService refreshTokenService, SessionManager sessionManager)
        {
            _refreshTokenService = refreshTokenService;
            _sessionManager = sessionManager;
        }

        public virtual IObservable<Unit> Execute(string userId)
        {
            return RefreshToken(userId, _sessionManager.RefreshToken).AsUnitObservable();
            //Need to replace credentials in User
//                .SelectMany(token => SaveNewToken(token));
        }

        private IObservable<Credentials> RefreshToken(string userId, string refreshToken)
        {
            return _refreshTokenService.Refresh(userId, refreshToken);
        }
    }
}