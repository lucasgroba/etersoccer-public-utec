using System;
using Etermax.Json;
using Etermax.Web.Client;
using Package.Etermax.EterChallenge.Users.Domain;
using UniRx;

namespace Package.Etermax.EterChallenge.Users.Infrastructure
{
    public class PlatformCreateUserService : ICreateUserService
    {
        private const string Resource = "/games/:gameId/accounts";
        private const string AccountId = "accountId";
        private const string AccessToken = "accessToken";
        private const string RefreshToken = "refreshToken";
        private readonly string _apiUrl;
        private readonly string _gameId;
        private readonly IWebClient _webClient;
        private readonly IScheduler _scheduler;

        public PlatformCreateUserService(string apiUrl, string gameId, IWebClient webClient,
            IScheduler scheduler = null)
        {
            if (scheduler == null)
                scheduler = Scheduler.ThreadPool;
            _scheduler = scheduler;
            _apiUrl = apiUrl;
            _gameId = gameId;
            _webClient = webClient;
        }

        public IObservable<User> Execute()
        {
            return _webClient.Post(_apiUrl + Resource)
                .ReplacePathParam("gameId", _gameId)
                .Send()
                .Select(response => response.BodyAsJsonObject)
                .ObserveOn(_scheduler)
                .Select(ToUser);
        }

        private User ToUser(JsonObject bodyAsJsonObject)
        {
            return User.NewGuest(bodyAsJsonObject.GetString(AccountId),
                bodyAsJsonObject.GetString(AccessToken),
                bodyAsJsonObject.GetString(RefreshToken));
        }
    }
}