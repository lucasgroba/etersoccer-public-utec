using System.Collections.Generic;
using Etermax.Json;
using Newtonsoft.Json.Linq;

namespace Etermax.Web.Client{
	public class HttpWebResponse{
		public int StatusCode { get; private set; }
		public string Body { get; private set; }
		public byte[] RawData { get; private set; }
		public Dictionary<string, string> Headers { get; private set; }

		public JsonObject BodyAsJsonObject {
			get {
				var token = JToken.Parse(Body);
				return token is JObject ? JsonObject.FromJson(Body) : null;
			}
		}

		public JsonArray<JsonObject> BodyAsJsonArray {
			get {
				var token = JToken.Parse(Body);
				return token is JArray ? JsonArray<JsonObject>.FromJson(Body) : null;
			}
		}

		public HttpWebResponse(int statusCode, string body, byte[] rawData,
			Dictionary<string, string> headers){
			StatusCode = statusCode;
			Body = body;
			RawData = rawData;
			Headers = headers;
		}
		public HttpWebResponse(HttpStatusCode statusCode, string body, byte[] rawData,
			Dictionary<string, string> headers){
			StatusCode = (int)statusCode;
			Body = body;
			RawData = rawData;
			Headers = headers;
		}
	}
}