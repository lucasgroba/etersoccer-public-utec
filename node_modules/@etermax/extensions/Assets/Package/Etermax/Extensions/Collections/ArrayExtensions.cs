using System;
using System.Collections.Generic;
using System.Linq;

namespace Etermax.Extensions.Collections
{
    public static class ArrayExtensions
    {
        public static void ForEach<T>(this IEnumerable<T> list, Action<T> action)
        {
            foreach (var item in list)
                action.Invoke(item);
        }

        public static List<T> Sort<T>(this IEnumerable<T> enumerable, IComparer<T> comparer)
        {
            var list = enumerable.ToList();
            list.Sort(comparer);
            return list;
        }

        public static List<T> Sort<T>(this IEnumerable<T> enumerable, Comparison<T> comparison)
        {
            var list = enumerable.ToList();
            list.Sort(comparison);
            return list;
        }
        
        public static string ToListString<T>(this IEnumerable<T> list)
        {
            return "[" + string.Join("],[", list.Select(i => i.ToString()).ToArray()) + "]";
        }
    }
}